host( "ext/java/org/liboga/xml/Lexer.rl", 1 ) @{package org.liboga.xml;

}@host( "ext/java/org/liboga/xml/Lexer.rl", 3 ) @{

import java.io.IOException;

import org.jcodings.Encoding;

import org.jruby.Ruby;
import org.jruby.RubyModule;
import org.jruby.RubyClass;
import org.jruby.RubyObject;
import org.jruby.RubyString;
import org.jruby.RubyFixnum;
import org.jruby.util.ByteList;
import org.jruby.anno.JRubyClass;
import org.jruby.anno.JRubyMethod;
import org.jruby.runtime.ThreadContext;
import org.jruby.runtime.ObjectAllocator;
import org.jruby.runtime.builtin.IRubyObject;

/**
 * Lexer support class for JRuby.
 *
 * The Lexer class contains the raw Ragel loop and calls back in to Ruby land
 * whenever a Ragel action is needed similar to the C extension setup.
 *
 * This class requires Ruby land to first define the `Oga::XML` namespace.
 */
@@JRubyClass(name="Oga::XML::Lexer", parent="Object")
public class Lexer extends RubyObject
{
    /**
     * The current Ruby runtime.
     */
    private Ruby runtime;

    }@
array s8 _java_lexer_actions( 0, 92 ) = { 0, 1, 0, 1, 2, 1, 3, 1, 4, 1, 5, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 1, 11, 1, 12, 1, 13, 1, 14, 1, 15, 1, 16, 1, 17, 1, 18, 1, 21, 1, 22, 1, 23, 1, 24, 1, 25, 1, 26, 1, 27, 1, 28, 1, 29, 1, 30, 1, 34, 1, 35, 1, 36, 1, 37, 1, 38, 1, 41, 1, 43, 1, 44, 1, 45, 1, 46, 1, 47, 1, 48, 1, 49, 1, 50, 1, 51, 1, 52, 1, 53, 1, 54, 1, 55, 1, 56, 1, 57, 1, 58, 1, 59, 1, 60, 1, 61, 1, 62, 1, 63, 1, 64, 1, 65, 1, 66, 1, 67, 1, 68, 1, 69, 1, 70, 1, 71, 1, 72, 1, 73, 1, 74, 1, 75, 1, 76, 1, 77, 1, 78, 1, 79, 1, 80, 1, 83, 1, 84, 1, 85, 1, 86, 1, 87, 1, 88, 1, 89, 1, 90, 1, 91, 1, 92, 2, 0, 1, 2, 0, 33, 2, 0, 40, 2, 0, 42, 2, 4, 0, 2, 4, 19, 2, 4, 20, 2, 4, 81, 2, 4, 82, 2, 31, 0, 2, 32, 0, 2, 39, 0, 0 };

array s16 _java_lexer_key_offsets( 0, 553 ) = { 0, 0, 4, 5, 7, 9, 11, 13, 15, 17, 21, 22, 23, 24, 25, 26, 27, 38, 48, 49, 50, 60, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 96, 100, 111, 121, 133, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 182, 183, 193, 205, 217, 229, 241, 253, 265, 277, 289, 301, 313, 326, 336, 337, 347, 358, 369, 380, 386, 387, 392, 397, 399, 414, 415, 426, 427, 437, 448, 458, 473, 474, 484, 485, 495, 506, 516, 517, 518, 531, 544, 545, 546, 548, 549, 550, 551, 553, 0 };

array char _java_lexer_trans_keys( 0, 127 ) = { u(45), u(68), u(91), u(100), u(45), u(79), u(111), u(67), u(99), u(84), u(116), u(89), u(121), u(80), u(112), u(69), u(101), u(13), u(32), u(9), u(10), u(67), u(68), u(65), u(84), u(65), u(91), u(47), u(96), u(120), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(47), u(96), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(62), u(62), u(47), u(96), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(47), u(96), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(115), u(99), u(114), u(105), u(112), u(116), u(62), u(115), u(116), u(121), u(108), u(101), u(62), u(60), u(33), u(47), u(63), u(96), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(13), u(32), u(9), u(10), u(47), u(58), u(96), u(0), u(44), u(59), u(64), u(91), u(94), u(123), u(127), u(47), u(96), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(47), u(58), u(96), u(109), u(0), u(44), u(59), u(64), u(91), u(94), u(123), u(127), u(47), u(58), u(96), u(108), u(0), u(44), u(59), u(64), u(91), u(94), u(123), u(127), u(45), u(45), u(45), u(93), u(93), u(93), u(63), u(63), u(62), u(39), u(39), u(34), u(34), u(93), u(93), u(9), u(10), u(13), u(32), u(34), u(39), u(47), u(62), u(80), u(83), u(91), u(96), u(112), u(115), u(0), u(44), u(58), u(64), u(92), u(94), u(123), u(127), u(10), u(47), u(96), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(47), u(85), u(96), u(117), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(47), u(66), u(96), u(98), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(47), u(76), u(96), u(108), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(47), u(73), u(96), u(105), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(47), u(67), u(96), u(99), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(47), u(89), u(96), u(121), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(47), u(83), u(96), u(115), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(47), u(84), u(96), u(116), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(47), u(69), u(96), u(101), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(47), u(77), u(96), u(109), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(34), u(39), u(47), u(63), u(96), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(47), u(96), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(62), u(47), u(96), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(47), u(58), u(96), u(0), u(44), u(59), u(64), u(91), u(94), u(123), u(127), u(47), u(62), u(96), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(47), u(58), u(96), u(0), u(44), u(59), u(64), u(91), u(94), u(123), u(127), u(13), u(32), u(34), u(39), u(9), u(10), u(10), u(13), u(32), u(62), u(9), u(10), u(13), u(32), u(62), u(9), u(10), u(34), u(39), u(10), u(13), u(47), u(60), u(61), u(62), u(96), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(10), u(47), u(58), u(96), u(0), u(44), u(59), u(64), u(91), u(94), u(123), u(127), u(62), u(47), u(96), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(47), u(58), u(96), u(0), u(44), u(59), u(64), u(91), u(94), u(123), u(127), u(47), u(96), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(10), u(13), u(47), u(60), u(61), u(62), u(96), u(0), u(44), u(59), u(64), u(91), u(94), u(123), u(127), u(10), u(47), u(96), u(0), u(44), u(59), u(64), u(91), u(94), u(123), u(127), u(62), u(47), u(96), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(47), u(58), u(96), u(0), u(44), u(59), u(64), u(91), u(94), u(123), u(127), u(47), u(96), u(0), u(44), u(58), u(64), u(91), u(94), u(123), u(127), u(60), u(60), u(60), u(64), u(96), u(0), u(32), u(34), u(44), u(58), u(62), u(91), u(94), u(123), u(127), u(60), u(64), u(96), u(0), u(32), u(34), u(44), u(58), u(62), u(91), u(94), u(123), u(127), u(60), u(60), u(47), u(60), u(60), u(60), u(60), u(47), u(60), u(60), u(0) };

array s8 _java_lexer_single_lengths( 0, 14 ) = { 0, 4, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 2, 3, 2, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 14, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 2, 1, 2, 3, 3, 3, 4, 1, 3, 3, 2, 7, 1, 3, 1, 2, 3, 2, 7, 1, 2, 1, 2, 3, 2, 1, 1, 3, 3, 1, 1, 2, 1, 1, 1, 2, 1, 0 };

array s8 _java_lexer_range_lengths( 0, 5 ) = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 1, 0, 1, 1, 0, 4, 0, 4, 0, 4, 4, 4, 4, 0, 4, 0, 4, 4, 4, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

array s16 _java_lexer_index_offsets( 0, 496 ) = { 0, 0, 5, 7, 10, 13, 16, 19, 22, 25, 29, 31, 33, 35, 37, 39, 41, 49, 56, 58, 60, 67, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 111, 115, 123, 130, 139, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 197, 199, 206, 215, 224, 233, 242, 251, 260, 269, 278, 287, 296, 306, 313, 315, 322, 330, 338, 346, 352, 354, 359, 364, 367, 379, 381, 389, 391, 398, 406, 413, 425, 427, 434, 436, 443, 451, 458, 460, 462, 471, 480, 482, 484, 487, 489, 491, 493, 496, 0 };

array s8 _java_lexer_cond_targs( 0, 107 ) = { 2, 3, 10, 3, 35, 35, 35, 4, 4, 35, 5, 5, 35, 6, 6, 35, 7, 7, 35, 8, 8, 35, 9, 9, 35, 37, 37, 37, 35, 11, 35, 12, 35, 13, 35, 14, 35, 15, 35, 35, 35, 35, 35, 40, 35, 35, 35, 35, 38, 35, 35, 35, 35, 35, 35, 39, 42, 42, 45, 45, 82, 82, 82, 82, 82, 82, 88, 89, 89, 89, 89, 89, 89, 95, 23, 100, 24, 100, 25, 100, 26, 100, 27, 100, 28, 100, 100, 100, 30, 104, 31, 104, 32, 104, 33, 104, 34, 104, 104, 104, 36, 35, 1, 35, 16, 35, 35, 35, 35, 35, 35, 37, 37, 37, 35, 35, 17, 35, 35, 35, 35, 35, 38, 35, 35, 35, 35, 35, 35, 39, 35, 17, 35, 41, 35, 35, 35, 35, 38, 35, 17, 35, 38, 35, 35, 35, 35, 38, 44, 43, 42, 43, 18, 42, 47, 46, 45, 46, 19, 45, 50, 49, 48, 49, 48, 48, 51, 52, 51, 52, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 58, 57, 57, 57, 0, 57, 60, 65, 57, 0, 60, 65, 0, 0, 0, 0, 59, 57, 57, 57, 57, 57, 57, 57, 57, 59, 57, 61, 57, 61, 57, 57, 57, 57, 59, 57, 62, 57, 62, 57, 57, 57, 57, 59, 57, 63, 57, 63, 57, 57, 57, 57, 59, 57, 64, 57, 64, 57, 57, 57, 57, 59, 57, 59, 57, 59, 57, 57, 57, 57, 59, 57, 66, 57, 66, 57, 57, 57, 57, 59, 57, 67, 57, 67, 57, 57, 57, 57, 59, 57, 68, 57, 68, 57, 57, 57, 57, 59, 57, 69, 57, 69, 57, 57, 57, 57, 59, 57, 59, 57, 59, 57, 57, 57, 57, 59, 70, 70, 70, 72, 70, 70, 70, 70, 70, 71, 70, 70, 70, 70, 70, 70, 71, 70, 70, 0, 0, 0, 0, 0, 0, 74, 73, 73, 73, 73, 73, 73, 73, 74, 75, 75, 75, 75, 75, 75, 75, 76, 75, 75, 75, 75, 75, 75, 75, 76, 78, 77, 77, 77, 77, 77, 77, 77, 79, 79, 79, 79, 80, 79, 79, 79, 79, 80, 81, 81, 81, 82, 83, 85, 86, 82, 82, 82, 82, 82, 82, 82, 84, 82, 82, 82, 82, 82, 82, 82, 82, 82, 84, 82, 82, 82, 82, 82, 82, 82, 82, 87, 82, 20, 82, 82, 82, 82, 82, 87, 82, 82, 82, 82, 82, 82, 88, 89, 90, 92, 93, 89, 89, 89, 89, 89, 89, 89, 91, 89, 89, 89, 89, 89, 89, 89, 89, 91, 89, 89, 89, 89, 89, 89, 89, 89, 94, 89, 21, 89, 89, 89, 89, 89, 94, 89, 89, 89, 89, 89, 89, 95, 99, 97, 98, 97, 98, 97, 97, 97, 97, 97, 97, 97, 96, 98, 97, 97, 97, 97, 97, 97, 97, 96, 102, 101, 100, 101, 22, 103, 100, 103, 100, 106, 105, 104, 105, 29, 107, 104, 107, 104, 0, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 42, 45, 82, 89, 100, 100, 100, 100, 100, 100, 100, 104, 104, 104, 104, 104, 104, 35, 35, 35, 35, 35, 35, 35, 42, 42, 42, 45, 45, 45, 48, 48, 48, 51, 51, 53, 53, 55, 55, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 70, 70, 70, 73, 73, 75, 75, 77, 77, 79, 79, 81, 82, 82, 82, 82, 82, 82, 82, 89, 89, 89, 89, 89, 89, 89, 96, 96, 96, 96, 100, 100, 100, 100, 104, 104, 104, 104, 0 };

array s16 _java_lexer_cond_actions( 0, 198 ) = { 0, 0, 0, 0, 161, 145, 161, 0, 0, 161, 0, 0, 161, 0, 0, 161, 0, 0, 161, 0, 0, 161, 0, 0, 161, 1, 1, 1, 161, 0, 161, 0, 161, 0, 161, 0, 161, 0, 161, 147, 161, 161, 161, 189, 161, 161, 161, 161, 189, 163, 163, 163, 163, 163, 163, 0, 9, 13, 15, 19, 105, 105, 105, 105, 105, 105, 0, 125, 125, 125, 125, 125, 125, 0, 0, 137, 0, 137, 0, 137, 0, 137, 0, 137, 0, 137, 133, 137, 0, 143, 0, 143, 0, 143, 0, 143, 0, 143, 139, 143, 7, 153, 0, 151, 0, 159, 159, 159, 159, 159, 149, 1, 1, 1, 155, 163, 0, 163, 163, 163, 163, 163, 189, 157, 157, 157, 157, 157, 157, 0, 157, 0, 157, 189, 157, 157, 157, 157, 189, 157, 0, 157, 186, 157, 157, 157, 157, 189, 177, 1, 11, 1, 0, 11, 177, 1, 17, 1, 0, 17, 1, 1, 23, 1, 21, 23, 25, 1, 27, 1, 29, 1, 31, 1, 33, 1, 35, 1, 47, 45, 0, 47, 41, 39, 0, 43, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 183, 45, 51, 53, 53, 53, 53, 53, 53, 183, 49, 0, 49, 0, 49, 49, 49, 49, 183, 49, 0, 49, 0, 49, 49, 49, 49, 183, 49, 0, 49, 0, 49, 49, 49, 49, 183, 49, 0, 49, 0, 49, 49, 49, 49, 183, 49, 180, 49, 180, 49, 49, 49, 49, 183, 49, 0, 49, 0, 49, 49, 49, 49, 183, 49, 0, 49, 0, 49, 49, 49, 49, 183, 49, 0, 49, 0, 49, 49, 49, 49, 183, 49, 0, 49, 0, 49, 49, 49, 49, 183, 49, 180, 49, 180, 49, 49, 49, 49, 183, 195, 192, 168, 1, 168, 168, 168, 168, 168, 1, 57, 57, 57, 57, 57, 57, 0, 55, 59, 0, 0, 0, 0, 0, 0, 0, 63, 61, 63, 63, 63, 63, 63, 0, 171, 198, 171, 171, 171, 171, 171, 1, 67, 65, 67, 67, 67, 67, 67, 0, 1, 174, 69, 69, 174, 71, 174, 73, 75, 75, 75, 75, 0, 77, 77, 77, 77, 0, 81, 79, 83, 85, 0, 0, 0, 89, 91, 95, 95, 95, 95, 95, 0, 85, 97, 101, 87, 101, 101, 101, 101, 101, 0, 93, 103, 103, 103, 103, 103, 103, 103, 7, 99, 0, 99, 99, 99, 99, 99, 7, 99, 99, 99, 99, 99, 99, 0, 107, 0, 0, 0, 109, 111, 115, 115, 115, 115, 115, 0, 107, 117, 121, 121, 121, 121, 121, 121, 0, 113, 123, 123, 123, 123, 123, 123, 123, 7, 119, 0, 119, 119, 119, 119, 119, 7, 119, 119, 119, 119, 119, 119, 0, 165, 1, 165, 1, 165, 1, 1, 1, 1, 1, 1, 1, 129, 165, 1, 1, 1, 1, 1, 1, 1, 127, 177, 1, 135, 1, 0, 1, 135, 1, 135, 177, 1, 141, 1, 0, 1, 141, 1, 141, 0, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 163, 13, 19, 105, 125, 137, 137, 137, 137, 137, 137, 137, 143, 143, 143, 143, 143, 143, 0, 159, 155, 163, 157, 157, 157, 0, 11, 11, 0, 17, 17, 0, 23, 23, 0, 27, 0, 31, 0, 35, 0, 51, 53, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 0, 57, 59, 0, 63, 0, 67, 0, 73, 0, 77, 0, 0, 97, 101, 103, 103, 99, 99, 0, 117, 121, 123, 123, 119, 119, 0, 131, 131, 131, 0, 135, 135, 135, 0, 141, 141, 141, 0 };

array s8 _java_lexer_to_state_actions( 0, 3 ) = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 3, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 3, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0 };

array s8 _java_lexer_from_state_actions( 0, 5 ) = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 5, 0, 0, 5, 0, 0, 5, 0, 0, 5, 0, 5, 0, 5, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 5, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 0 };

array s16 _java_lexer_eof_trans( 0, 606 ) = { 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 0 };

value int java_lexer_start = 35;
value int java_lexer_first_final = 35;
value int java_lexer_error = 0;

value int java_lexer_en_comment_body = 42;
value int java_lexer_en_cdata_body = 45;
value int java_lexer_en_proc_ins_body = 48;
value int java_lexer_en_string_squote = 51;
value int java_lexer_en_string_dquote = 53;
value int java_lexer_en_doctype_inline = 55;
value int java_lexer_en_doctype = 57;
value int java_lexer_en_xml_decl = 70;
value int java_lexer_en_element_name = 73;
value int java_lexer_en_element_close = 75;
value int java_lexer_en_attribute_pre = 77;
value int java_lexer_en_unquoted_attribute_value = 79;
value int java_lexer_en_quoted_attribute_value = 81;
value int java_lexer_en_element_head = 82;
value int java_lexer_en_html_element_head = 89;
value int java_lexer_en_text = 96;
value int java_lexer_en_html_script = 100;
value int java_lexer_en_html_style = 104;
value int java_lexer_en_main = 35;

host( "ext/java/org/liboga/xml/Lexer.rl", 38 ) @{

    /* Used by Ragel to keep track of the current state. */
    int act;
    int cs;
    int top;
    int lines;
    int[] stack;

    /**
     * Sets up the current class in the Ruby runtime.
     */
    public static void load(Ruby runtime)
    {
        RubyModule xml = (RubyModule) runtime.getModule("Oga")
            .getConstant("XML");

        RubyClass lexer = xml.defineClassUnder(
            "Lexer",
            runtime.getObject(),
            ALLOCATOR
        );

        lexer.defineAnnotatedMethods(Lexer.class);
    }

    private static final ObjectAllocator ALLOCATOR = new ObjectAllocator()
    {
        public IRubyObject allocate(Ruby runtime, RubyClass klass)
        {
            return new org.liboga.xml.Lexer(runtime, klass);
        }
    };

    public Lexer(Ruby runtime, RubyClass klass)
    {
        super(runtime, klass);

        this.runtime = runtime;
    }

    /**
     * Runs the bulk of the Ragel loop and calls back in to Ruby.
     *
     * This method pulls its data in from the instance variable `@@data`. The
     * Ruby side of the Lexer class should set this variable to a String in its
     * constructor method. Encodings are passed along to make sure that token
     * values share the same encoding as the input.
     *
     * This method always returns nil.
     */
    @@JRubyMethod
    public IRubyObject advance_native(ThreadContext context, RubyString rb_str)
    {
        Boolean html_p = this.callMethod(context, "html?").isTrue();

        Encoding encoding = rb_str.getEncoding();

        byte[] data = rb_str.getBytes();

        int ts    = 0;
        int te    = 0;
        int p     = 0;
        int mark  = 0;
        int lines = this.lines;
        int pe    = data.length;
        int eof   = data.length;

        String id_advance_line        = "advance_line";
        String id_on_attribute        = "on_attribute";
        String id_on_attribute_ns     = "on_attribute_ns";
        String id_on_cdata_start      = "on_cdata_start";
        String id_on_cdata_body       = "on_cdata_body";
        String id_on_cdata_end        = "on_cdata_end";
        String id_on_comment_start    = "on_comment_start";
        String id_on_comment_body     = "on_comment_body";
        String id_on_comment_end      = "on_comment_end";
        String id_on_doctype_end      = "on_doctype_end";
        String id_on_doctype_inline   = "on_doctype_inline";
        String id_on_doctype_name     = "on_doctype_name";
        String id_on_doctype_start    = "on_doctype_start";
        String id_on_doctype_type     = "on_doctype_type";
        String id_on_element_end      = "on_element_end";
        String id_on_element_name     = "on_element_name";
        String id_on_element_ns       = "on_element_ns";
        String id_on_element_open_end = "on_element_open_end";
        String id_on_proc_ins_end     = "on_proc_ins_end";
        String id_on_proc_ins_name    = "on_proc_ins_name";
        String id_on_proc_ins_start   = "on_proc_ins_start";
        String id_on_proc_ins_body    = "on_proc_ins_body";
        String id_on_string_body      = "on_string_body";
        String id_on_string_dquote    = "on_string_dquote";
        String id_on_string_squote    = "on_string_squote";
        String id_on_text             = "on_text";
        String id_on_xml_decl_end     = "on_xml_decl_end";
        String id_on_xml_decl_start   = "on_xml_decl_start";

        }@
	{
	int _klen;
	uint _trans = 0;
	index char  _keys;
	index s8  _acts;
	uint _nacts;
	int __have;
	_resume::
	while ( p != pe || p == eof ) {
		_again::
		while ( TRUE ) {
			_acts = offset( _java_lexer_actions, _java_lexer_from_state_actions[host( "-", 1 ) ={ this.cs}=] );
			_nacts = cast(uint)deref( _java_lexer_actions, _acts );
			_acts += 1;
			while ( _nacts > 0 ) {
				switch ( deref( _java_lexer_actions, _acts ) ) {
					case 3 {
							host( "NONE", 1 ) ${${ts = p;}$}$
						
						
					}
				}
				_nacts -= 1;
				_acts += 1;
			}
			
			if ( p == eof ) {
				if ( _java_lexer_eof_trans[host( "-", 1 ) ={ this.cs}=] > 0 ) {
					_trans = cast(uint)_java_lexer_eof_trans[host( "-", 1 ) ={ this.cs}=] - 1;
				}
			}
			else {
				_keys = offset( _java_lexer_trans_keys, _java_lexer_key_offsets[host( "-", 1 ) ={ this.cs}=] );
				_trans = cast(uint)_java_lexer_index_offsets[host( "-", 1 ) ={ this.cs}=];
				
				_klen = cast(int)_java_lexer_single_lengths[host( "-", 1 ) ={ this.cs}=];
				__have = 0;
				if ( _klen > 0 ) {
					index char _lower = _keys;
					index char _upper = _keys + _klen - 1;
					index char _mid;
					while ( TRUE ) {
						if ( _upper < _lower ) {
							_keys += _klen;
							_trans += cast(uint)_klen;
							break;
						}
						
						_mid = _lower + ((_upper-_lower) >> 1);
						if ( ( deref( data, p )) < deref( _java_lexer_trans_keys, _mid ) )
							_upper = _mid - 1;
						else if ( ( deref( data, p )) > deref( _java_lexer_trans_keys, _mid ) )
							_lower = _mid + 1;
						else {
							__have = 1;
							_trans += cast(uint)(_mid - _keys);
							break;
						}
					}
				}
				
				_klen = cast(int)_java_lexer_range_lengths[host( "-", 1 ) ={ this.cs}=];
				if ( __have == 0 && _klen > 0 ) {
					index char _lower = _keys;
					index char _upper = _keys + (_klen<<1) - 2;
					index char _mid;
					while ( TRUE ) {
						if ( _upper < _lower ) {
							_trans += cast(uint)_klen;
							break;
						}
						
						_mid = _lower + (((_upper-_lower) >> 1) & ~1);
						if ( ( deref( data, p )) < deref( _java_lexer_trans_keys, _mid ) )
							_upper = _mid - 2;
						else if ( ( deref( data, p )) > deref( _java_lexer_trans_keys, _mid + 1 ) )
							_lower = _mid + 2;
						else {
							_trans += cast(uint)((_mid - _keys)>>1);
							break;
						}
					}
				}
				
			}
			host( "-", 1 ) ={ this.cs}= = cast(int)_java_lexer_cond_targs[_trans];
			
			if ( _java_lexer_cond_actions[_trans] != 0 ) {
				
				_acts = offset( _java_lexer_actions, _java_lexer_cond_actions[_trans] );
				_nacts = cast(uint)deref( _java_lexer_actions, _acts );
				_acts += 1;
				while ( _nacts > 0 ) {
					switch ( deref( _java_lexer_actions, _acts ) )
					{
						case 0 {
								host( "ext/ragel/base_lexer.rl", 61 ) ${
        /* 10 stands for '\n' */
        if ( ={( deref( data, p ))}= == 10 ) lines++;
    }$
							
							
						}
						case 1 {
								host( "ext/ragel/base_lexer.rl", 662 ) ${ mark = p; }$
							
							
						}
						case 4 {
								host( "NONE", 1 ) ${${te = p+1;}$}$
							
							
						}
						case 5 {
								host( "ext/ragel/base_lexer.rl", 108 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 108 ) ${
            callback_simple(id_on_comment_end);

            ${host( "-", 1 ) ={ this.cs}= = 35;}$}$}$}$
							
							
						}
						case 6 {
								host( "ext/ragel/base_lexer.rl", 97 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 97 ) ${
            callback(id_on_comment_body, data, encoding, ts, te);

            if ( lines > 0 )
            {
                advance_line(lines);

                lines = 0;
            }
        }$}$}$
							
							
						}
						case 7 {
								host( "ext/ragel/base_lexer.rl", 97 ) ${${p = ((te))-1;
									host( "ext/ragel/base_lexer.rl", 97 ) ${
            callback(id_on_comment_body, data, encoding, ts, te);

            if ( lines > 0 )
            {
                advance_line(lines);

                lines = 0;
            }
        }$}$}$
							
							
						}
						case 8 {
								host( "ext/ragel/base_lexer.rl", 147 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 147 ) ${
            callback_simple(id_on_cdata_end);

            ${host( "-", 1 ) ={ this.cs}= = 35;}$}$}$}$
							
							
						}
						case 9 {
								host( "ext/ragel/base_lexer.rl", 136 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 136 ) ${
            callback(id_on_cdata_body, data, encoding, ts, te);

            if ( lines > 0 )
            {
                advance_line(lines);

                lines = 0;
            }
        }$}$}$
							
							
						}
						case 10 {
								host( "ext/ragel/base_lexer.rl", 136 ) ${${p = ((te))-1;
									host( "ext/ragel/base_lexer.rl", 136 ) ${
            callback(id_on_cdata_body, data, encoding, ts, te);

            if ( lines > 0 )
            {
                advance_line(lines);

                lines = 0;
            }
        }$}$}$
							
							
						}
						case 11 {
								host( "ext/ragel/base_lexer.rl", 190 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 190 ) ${
            callback_simple(id_on_proc_ins_end);

            ${host( "-", 1 ) ={ this.cs}= = 35;}$}$}$}$
							
							
						}
						case 12 {
								host( "ext/ragel/base_lexer.rl", 179 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 179 ) ${
            callback(id_on_proc_ins_body, data, encoding, ts, te);

            if ( lines > 0 )
            {
                advance_line(lines);

                lines = 0;
            }
        }$}$}$
							
							
						}
						case 13 {
								host( "ext/ragel/base_lexer.rl", 232 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 232 ) ${
            callback_simple(id_on_string_squote);

            ${host( "-", 1 ) ={ this.top}= -= 1;host( "-", 1 ) ={ this.cs}= = host( "-", 1 ) ={ this.stack}=[host( "-", 1 ) ={ this.top}=];if ( TRUE ) break _again;}$
        }$}$}$
							
							
						}
						case 14 {
								host( "ext/ragel/base_lexer.rl", 206 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 206 ) ${
        callback(id_on_string_body, data, encoding, ts, te);

        if ( lines > 0 )
        {
            advance_line(lines);

            lines = 0;
        }
    }$}$}$
							
							
						}
						case 15 {
								host( "ext/ragel/base_lexer.rl", 242 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 242 ) ${
            callback_simple(id_on_string_dquote);

            ${host( "-", 1 ) ={ this.top}= -= 1;host( "-", 1 ) ={ this.cs}= = host( "-", 1 ) ={ this.stack}=[host( "-", 1 ) ={ this.top}=];if ( TRUE ) break _again;}$
        }$}$}$
							
							
						}
						case 16 {
								host( "ext/ragel/base_lexer.rl", 206 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 206 ) ${
        callback(id_on_string_body, data, encoding, ts, te);

        if ( lines > 0 )
        {
            advance_line(lines);

            lines = 0;
        }
    }$}$}$
							
							
						}
						case 17 {
								host( "ext/ragel/base_lexer.rl", 287 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 287 ) ${ ${host( "-", 1 ) ={ this.cs}= = 57;}$}$}$}$
							
							
						}
						case 18 {
								host( "ext/ragel/base_lexer.rl", 276 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 276 ) ${
            callback(id_on_doctype_inline, data, encoding, ts, te);

            if ( lines > 0 )
            {
                advance_line(lines);

                lines = 0;
            }
        }$}$}$
							
							
						}
						case 19 {
								host( "ext/ragel/base_lexer.rl", 293 ) ${${host( "-", 1 ) ={ this.act}= = 13;}$}$
							
							
						}
						case 20 {
								host( "ext/ragel/base_lexer.rl", 304 ) ${${host( "-", 1 ) ={ this.act}= = 17;}$}$
							
							
						}
						case 21 {
								host( "ext/ragel/base_lexer.rl", 298 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 298 ) ${ ${host( "-", 1 ) ={ this.cs}= = 55;}$}$}$}$
							
							
						}
						case 22 {
								host( "ext/ragel/base_lexer.rl", 217 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 217 ) ${
        callback_simple(id_on_string_squote);

        ${host( "-", 1 ) ={ this.stack}=[host( "-", 1 ) ={ this.top}=] = host( "-", 1 ) ={ this.cs}=; host( "-", 1 ) ={ this.top}= += 1;host( "-", 1 ) ={ this.cs}= = 51;if ( TRUE ) break _again;}$}$}$}$
							
							
						}
						case 23 {
								host( "ext/ragel/base_lexer.rl", 223 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 223 ) ${
        callback_simple(id_on_string_dquote);

        ${host( "-", 1 ) ={ this.stack}=[host( "-", 1 ) ={ this.top}=] = host( "-", 1 ) ={ this.cs}=; host( "-", 1 ) ={ this.top}= += 1;host( "-", 1 ) ={ this.cs}= = 53;if ( TRUE ) break _again;}$}$}$}$
							
							
						}
						case 24 {
								host( "ext/ragel/base_lexer.rl", 308 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 308 ) ${
            callback_simple(id_on_doctype_end);
            ${host( "-", 1 ) ={ this.cs}= = 35;}$}$}$}$
							
							
						}
						case 25 {
								host( "ext/ragel/base_lexer.rl", 66 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 66 ) ${
        advance_line(1);
    }$}$}$
							
							
						}
						case 26 {
								host( "-", 1 ) ${${te = p+1;}$}$
							
							
						}
						case 27 {
								host( "ext/ragel/base_lexer.rl", 304 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 304 ) ${
            callback(id_on_doctype_name, data, encoding, ts, te);
        }$}$}$
							
							
						}
						case 28 {
								host( "ext/ragel/base_lexer.rl", 66 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 66 ) ${
        advance_line(1);
    }$}$}$
							
							
						}
						case 29 {
								host( "NONE", 1 ) ${${switch( host( "-", 1 ) ={ this.act}= ) {
										case 13 {
											p = ((te))-1;
											host( "ext/ragel/base_lexer.rl", 293 ) ${
            callback(id_on_doctype_type, data, encoding, ts, te);
        }$ 
										}
										case 17 {
											p = ((te))-1;
											host( "ext/ragel/base_lexer.rl", 304 ) ${
            callback(id_on_doctype_name, data, encoding, ts, te);
        }$ 
										}
									}}$
							}$
							
							
						}
						case 30 {
								host( "ext/ragel/base_lexer.rl", 332 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 332 ) ${
            if ( lines > 0 )
            {
                advance_line(lines);

                lines = 0;
            }

            callback_simple(id_on_xml_decl_end);

            ${host( "-", 1 ) ={ this.cs}= = 35;}$}$}$}$
							
							
						}
						case 31 {
								host( "ext/ragel/base_lexer.rl", 217 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 217 ) ${
        callback_simple(id_on_string_squote);

        ${host( "-", 1 ) ={ this.stack}=[host( "-", 1 ) ={ this.top}=] = host( "-", 1 ) ={ this.cs}=; host( "-", 1 ) ={ this.top}= += 1;host( "-", 1 ) ={ this.cs}= = 51;if ( TRUE ) break _again;}$}$}$}$
							
							
						}
						case 32 {
								host( "ext/ragel/base_lexer.rl", 223 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 223 ) ${
        callback_simple(id_on_string_dquote);

        ${host( "-", 1 ) ={ this.stack}=[host( "-", 1 ) ={ this.top}=] = host( "-", 1 ) ={ this.cs}=; host( "-", 1 ) ={ this.top}= += 1;host( "-", 1 ) ={ this.cs}= = 53;if ( TRUE ) break _again;}$}$}$}$
							
							
						}
						case 33 {
								host( "-", 1 ) ${${te = p+1;}$}$
							
							
						}
						case 34 {
								host( "ext/ragel/base_lexer.rl", 346 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 346 ) ${
            if ( lines > 0 )
            {
                advance_line(lines);

                lines = 0;
            }

            callback(id_on_attribute, data, encoding, ts, te);
        }$}$}$
							
							
						}
						case 35 {
								host( "-", 1 ) ${${te = p;p = p - 1;}$}$
							
							
						}
						case 36 {
								host( "ext/ragel/base_lexer.rl", 397 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 397 ) ${
            if ( !html_p )
            {
                callback(id_on_element_ns, data, encoding, ts, te - 1);
            }
        }$}$}$
							
							
						}
						case 37 {
								host( "ext/ragel/base_lexer.rl", 404 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 404 ) ${
            callback(id_on_element_name, data, encoding, ts, te);

            if ( html_p )
            {
                ${host( "-", 1 ) ={ this.cs}= = 89;}$}
            else
            {
                ${host( "-", 1 ) ={ this.cs}= = 82;}$}
        }$}$}$
							
							
						}
						case 38 {
								host( "-", 1 ) ${${te = p+1;}$}$
							
							
						}
						case 39 {
								host( "ext/ragel/base_lexer.rl", 426 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 426 ) ${
            if ( lines > 0 )
            {
                advance_line(lines);

                lines = 0;
            }

            ${host( "-", 1 ) ={ this.cs}= = 35;}$}$}$}$
							
							
						}
						case 40 {
								host( "-", 1 ) ${${te = p+1;}$}$
							
							
						}
						case 41 {
								host( "ext/ragel/base_lexer.rl", 381 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 381 ) ${
        callback(id_on_element_end, data, encoding, ts, te);
    }$}$}$
							
							
						}
						case 42 {
								host( "-", 1 ) ${${te = p+1;}$}$
							
							
						}
						case 43 {
								host( "ext/ragel/base_lexer.rl", 445 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 445 ) ${
            ${p = p - 1; }$

            if ( lines > 0 )
            {
                advance_line(lines);

                lines = 0;
            }

            ${host( "-", 1 ) ={ this.cs}= = 81;}$}$}$}$
							
							
						}
						case 44 {
								host( "ext/ragel/base_lexer.rl", 458 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 458 ) ${
            ${p = p - 1; }$

            if ( lines > 0 )
            {
                advance_line(lines);

                lines = 0;
            }

            if ( html_p )
            {
                ${host( "-", 1 ) ={ this.cs}= = 79;}$}
            /* XML doesn't support unquoted attribute values */
            else
            {
                ${host( "-", 1 ) ={ this.top}= -= 1;host( "-", 1 ) ={ this.cs}= = host( "-", 1 ) ={ this.stack}=[host( "-", 1 ) ={ this.top}=];if ( TRUE ) break _again;}$
            }
        }$}$}$
							
							
						}
						case 45 {
								host( "-", 1 ) ${${te = p;p = p - 1;}$}$
							
							
						}
						case 46 {
								host( "ext/ragel/base_lexer.rl", 70 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 70 ) ${
        ${p = p - 1; }$
        ${host( "-", 1 ) ={ this.top}= -= 1;host( "-", 1 ) ={ this.cs}= = host( "-", 1 ) ={ this.stack}=[host( "-", 1 ) ={ this.top}=];if ( TRUE ) break _again;}$
    }$}$}$
							
							
						}
						case 47 {
								host( "ext/ragel/base_lexer.rl", 496 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 496 ) ${
            callback_simple(id_on_string_squote);

            callback(id_on_string_body, data, encoding, ts, te);

            callback_simple(id_on_string_squote);
        }$}$}$
							
							
						}
						case 48 {
								host( "ext/ragel/base_lexer.rl", 512 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 512 ) ${
            callback_simple(id_on_string_squote);

            ${host( "-", 1 ) ={ this.cs}= = 51;}$}$}$}$
							
							
						}
						case 49 {
								host( "ext/ragel/base_lexer.rl", 518 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 518 ) ${
            callback_simple(id_on_string_dquote);

            ${host( "-", 1 ) ={ this.cs}= = 53;}$}$}$}$
							
							
						}
						case 50 {
								host( "ext/ragel/base_lexer.rl", 70 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 70 ) ${
        ${p = p - 1; }$
        ${host( "-", 1 ) ={ this.top}= -= 1;host( "-", 1 ) ={ this.cs}= = host( "-", 1 ) ={ this.stack}=[host( "-", 1 ) ={ this.top}=];if ( TRUE ) break _again;}$
    }$}$}$
							
							
						}
						case 51 {
								host( "ext/ragel/base_lexer.rl", 66 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 66 ) ${
        advance_line(1);
    }$}$}$
							
							
						}
						case 52 {
								host( "ext/ragel/base_lexer.rl", 559 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 559 ) ${
            callback(id_on_attribute_ns, data, encoding, ts, te - 1);
        }$}$}$
							
							
						}
						case 53 {
								host( "ext/ragel/base_lexer.rl", 527 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 527 ) ${
        ${host( "-", 1 ) ={ this.stack}=[host( "-", 1 ) ={ this.top}=] = host( "-", 1 ) ={ this.cs}=; host( "-", 1 ) ={ this.top}= += 1;host( "-", 1 ) ={ this.cs}= = 77;if ( TRUE ) break _again;}$}$}$}$
							
							
						}
						case 54 {
								host( "ext/ragel/base_lexer.rl", 569 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 569 ) ${
            callback_simple(id_on_element_open_end);

            ${host( "-", 1 ) ={ this.cs}= = 35;}$}$}$}$
							
							
						}
						case 55 {
								host( "ext/ragel/base_lexer.rl", 548 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 548 ) ${
        callback_simple(id_on_element_end);
        ${host( "-", 1 ) ={ this.cs}= = 35;}$}$}$}$
							
							
						}
						case 56 {
								host( "-", 1 ) ${${te = p+1;}$}$
							
							
						}
						case 57 {
								host( "ext/ragel/base_lexer.rl", 66 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 66 ) ${
        advance_line(1);
    }$}$}$
							
							
						}
						case 58 {
								host( "-", 1 ) ${${te = p;p = p - 1;}$}$
							
							
						}
						case 59 {
								host( "ext/ragel/base_lexer.rl", 563 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 563 ) ${
            callback(id_on_attribute, data, encoding, ts, te);
        }$}$}$
							
							
						}
						case 60 {
								host( "-", 1 ) ${${te = p;p = p - 1;}$}$
							
							
						}
						case 61 {
								host( "-", 1 ) ${${p = ((te))-1;
								}$}$
							
							
						}
						case 62 {
								host( "ext/ragel/base_lexer.rl", 66 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 66 ) ${
        advance_line(1);
    }$}$}$
							
							
						}
						case 63 {
								host( "ext/ragel/base_lexer.rl", 527 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 527 ) ${
        ${host( "-", 1 ) ={ this.stack}=[host( "-", 1 ) ={ this.top}=] = host( "-", 1 ) ={ this.cs}=; host( "-", 1 ) ={ this.top}= += 1;host( "-", 1 ) ={ this.cs}= = 77;if ( TRUE ) break _again;}$}$}$}$
							
							
						}
						case 64 {
								host( "ext/ragel/base_lexer.rl", 592 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 592 ) ${
            callback_simple(id_on_element_open_end);

            if ( html_script_p() )
            {
                ${host( "-", 1 ) ={ this.cs}= = 100;}$}
            else if ( html_style_p() )
            {
                ${host( "-", 1 ) ={ this.cs}= = 104;}$}
            else
            {
                ${host( "-", 1 ) ={ this.cs}= = 35;}$}
        }$}$}$
							
							
						}
						case 65 {
								host( "ext/ragel/base_lexer.rl", 548 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 548 ) ${
        callback_simple(id_on_element_end);
        ${host( "-", 1 ) ={ this.cs}= = 35;}$}$}$}$
							
							
						}
						case 66 {
								host( "-", 1 ) ${${te = p+1;}$}$
							
							
						}
						case 67 {
								host( "ext/ragel/base_lexer.rl", 66 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 66 ) ${
        advance_line(1);
    }$}$}$
							
							
						}
						case 68 {
								host( "-", 1 ) ${${te = p;p = p - 1;}$}$
							
							
						}
						case 69 {
								host( "ext/ragel/base_lexer.rl", 586 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 586 ) ${
            callback(id_on_attribute, data, encoding, ts, te);
        }$}$}$
							
							
						}
						case 70 {
								host( "-", 1 ) ${${te = p;p = p - 1;}$}$
							
							
						}
						case 71 {
								host( "-", 1 ) ${${p = ((te))-1;
								}$}$
							
							
						}
						case 72 {
								host( "ext/ragel/base_lexer.rl", 648 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 648 ) ${
            callback(id_on_text, data, encoding, ts, te);

            if ( lines > 0 )
            {
                advance_line(lines);

                lines = 0;
            }

            ${host( "-", 1 ) ={ this.cs}= = 35;}$}$}$}$
							
							
						}
						case 73 {
								host( "ext/ragel/base_lexer.rl", 662 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 662 ) ${
            callback(id_on_text, data, encoding, ts, mark);

            p    = mark - 1;
            mark = 0;

            if ( lines > 0 )
            {
                advance_line(lines);

                lines = 0;
            }

            ${host( "-", 1 ) ={ this.cs}= = 35;}$}$}$}$
							
							
						}
						case 74 {
								host( "ext/ragel/base_lexer.rl", 648 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 648 ) ${
            callback(id_on_text, data, encoding, ts, te);

            if ( lines > 0 )
            {
                advance_line(lines);

                lines = 0;
            }

            ${host( "-", 1 ) ={ this.cs}= = 35;}$}$}$}$
							
							
						}
						case 75 {
								host( "ext/ragel/base_lexer.rl", 385 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 385 ) ${
        callback_simple(id_on_element_end);

        ${host( "-", 1 ) ={ this.cs}= = 35;}$}$}$}$
							
							
						}
						case 76 {
								host( "ext/ragel/base_lexer.rl", 636 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 636 ) ${
        callback(id_on_text, data, encoding, ts, te);

        if ( lines > 0 )
        {
            advance_line(lines);

            lines = 0;
        }
    }$}$}$
							
							
						}
						case 77 {
								host( "ext/ragel/base_lexer.rl", 636 ) ${${p = ((te))-1;
									host( "ext/ragel/base_lexer.rl", 636 ) ${
        callback(id_on_text, data, encoding, ts, te);

        if ( lines > 0 )
        {
            advance_line(lines);

            lines = 0;
        }
    }$}$}$
							
							
						}
						case 78 {
								host( "ext/ragel/base_lexer.rl", 385 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 385 ) ${
        callback_simple(id_on_element_end);

        ${host( "-", 1 ) ={ this.cs}= = 35;}$}$}$}$
							
							
						}
						case 79 {
								host( "ext/ragel/base_lexer.rl", 636 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 636 ) ${
        callback(id_on_text, data, encoding, ts, te);

        if ( lines > 0 )
        {
            advance_line(lines);

            lines = 0;
        }
    }$}$}$
							
							
						}
						case 80 {
								host( "ext/ragel/base_lexer.rl", 636 ) ${${p = ((te))-1;
									host( "ext/ragel/base_lexer.rl", 636 ) ${
        callback(id_on_text, data, encoding, ts, te);

        if ( lines > 0 )
        {
            advance_line(lines);

            lines = 0;
        }
    }$}$}$
							
							
						}
						case 81 {
								host( "ext/ragel/base_lexer.rl", 325 ) ${${host( "-", 1 ) ={ this.act}= = 62;}$}$
							
							
						}
						case 82 {
								host( "ext/ragel/base_lexer.rl", 171 ) ${${host( "-", 1 ) ={ this.act}= = 65;}$}$
							
							
						}
						case 83 {
								host( "ext/ragel/base_lexer.rl", 90 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 90 ) ${
        callback_simple(id_on_comment_start);

        ${host( "-", 1 ) ={ this.cs}= = 42;}$}$}$}$
							
							
						}
						case 84 {
								host( "ext/ragel/base_lexer.rl", 129 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 129 ) ${
        callback_simple(id_on_cdata_start);

        ${host( "-", 1 ) ={ this.cs}= = 45;}$}$}$}$
							
							
						}
						case 85 {
								host( "ext/ragel/base_lexer.rl", 372 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 372 ) ${
        ${p = p - 1; }$
        ${host( "-", 1 ) ={ this.cs}= = 73;}$}$}$}$
							
							
						}
						case 86 {
								host( "ext/ragel/base_lexer.rl", 377 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 377 ) ${
        ${host( "-", 1 ) ={ this.cs}= = 75;}$}$}$}$
							
							
						}
						case 87 {
								host( "ext/ragel/base_lexer.rl", 622 ) ${${te = p+1;host( "ext/ragel/base_lexer.rl", 622 ) ${
        ${p = p - 1; }$
        ${host( "-", 1 ) ={ this.cs}= = 96;}$}$}$}$
							
							
						}
						case 88 {
								host( "ext/ragel/base_lexer.rl", 261 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 261 ) ${
        callback_simple(id_on_doctype_start);

        if ( lines > 0 )
        {
            advance_line(lines);

            lines = 0;
        }

        ${host( "-", 1 ) ={ this.cs}= = 57;}$}$}$}$
							
							
						}
						case 89 {
								host( "ext/ragel/base_lexer.rl", 171 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 171 ) ${
        callback_simple(id_on_proc_ins_start);
        callback(id_on_proc_ins_name, data, encoding, ts + 2, te);

        ${host( "-", 1 ) ={ this.cs}= = 48;}$}$}$}$
							
							
						}
						case 90 {
								host( "ext/ragel/base_lexer.rl", 622 ) ${${te = p;p = p - 1;host( "ext/ragel/base_lexer.rl", 622 ) ${
        ${p = p - 1; }$
        ${host( "-", 1 ) ={ this.cs}= = 96;}$}$}$}$
							
							
						}
						case 91 {
								host( "ext/ragel/base_lexer.rl", 622 ) ${${p = ((te))-1;
									host( "ext/ragel/base_lexer.rl", 622 ) ${
        ${p = p - 1; }$
        ${host( "-", 1 ) ={ this.cs}= = 96;}$}$}$}$
							
							
						}
						case 92 {
								host( "NONE", 1 ) ${${switch( host( "-", 1 ) ={ this.act}= ) {
										case 62 {
											p = ((te))-1;
											host( "ext/ragel/base_lexer.rl", 325 ) ${
        callback_simple(id_on_xml_decl_start);
        ${host( "-", 1 ) ={ this.cs}= = 70;}$}$ 
										}
										case 65 {
											p = ((te))-1;
											host( "ext/ragel/base_lexer.rl", 171 ) ${
        callback_simple(id_on_proc_ins_start);
        callback(id_on_proc_ins_name, data, encoding, ts + 2, te);

        ${host( "-", 1 ) ={ this.cs}= = 48;}$}$ 
										}
									}}$
							}$
							
							
						}
					}
					_nacts -= 1;
					_acts += 1;
				}
				
			}
			break _again;
		}
		
		_again: {}
		if ( p == eof ) {
			if ( host( "-", 1 ) ={ this.cs}= >= 35 )
			break _resume;
		}
		else {
			_acts = offset( _java_lexer_actions, _java_lexer_to_state_actions[host( "-", 1 ) ={ this.cs}=] );
			_nacts = cast(uint)deref( _java_lexer_actions, _acts );
			_acts += 1;
			while ( _nacts > 0 ) {
				switch ( deref( _java_lexer_actions, _acts ) ) {
					case 2 {
							host( "NONE", 1 ) ${${ts = nil;}$}$
						
						
					}
				}
				_nacts -= 1;
				_acts += 1;
			}
			
			if ( host( "-", 1 ) ={ this.cs}= != 0 ) {
				p += 1;
				continue _resume;
			}
		}
		break _resume;
	}
}
host( "ext/java/org/liboga/xml/Lexer.rl", 135 ) @{

        this.lines = lines;

        return context.nil;
    }

    /**
     * Resets the internal state of the lexer.
     */
    @@JRubyMethod
    public IRubyObject reset_native(ThreadContext context)
    {
        this.act   = 0;
        this.top   = 0;
        this.stack = new int[4];
        this.cs    = java_lexer_start;

        return context.nil;
    }

    /**
     * Calls back in to Ruby land passing the current token value along.
     *
     * This method calls back in to Ruby land based on the method name
     * specified in `name`. The Ruby callback should take one argument. This
     * argument will be a String containing the value of the current token.
     */
    public void callback(String name, byte[] data, Encoding enc, int ts, int te)
    {
        ByteList bytelist = new ByteList(data, ts, te - ts, enc, true);

        RubyString value = this.runtime.newString(bytelist);

        ThreadContext context = this.runtime.getCurrentContext();

        this.callMethod(context, name, value);
    }

    /**
     * Calls back in to Ruby land without passing any arguments.
     */
    public void callback_simple(String name)
    {
        ThreadContext context = this.runtime.getCurrentContext();

        this.callMethod(context, name);
    }

    /**
     * Advances the line number by `amount` lines.
     */
    public void advance_line(int amount)
    {
        ThreadContext context = this.runtime.getCurrentContext();
        RubyFixnum lines      = this.runtime.newFixnum(amount);

        this.callMethod(context, "advance_line", lines);
    }

    /**
     * @@see Oga::XML::Lexer#html_script?
     */
    public Boolean html_script_p()
    {
        ThreadContext context = this.runtime.getCurrentContext();

        return this.callMethod(context, "html_script?").isTrue();
    }

    /**
     * @@see Oga::XML::Lexer#html_style?
     */
    public Boolean html_style_p()
    {
        ThreadContext context = this.runtime.getCurrentContext();

        return this.callMethod(context, "html_style?").isTrue();
    }
}

}@host( "ext/java/org/liboga/xml/Lexer.rl", 223 ) @{
}@